{"version":3,"file":"component---src-pages-research-js-68367aab2fb778ffb6c7.js","mappings":"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","sources":["webpack://gatsby-starter-clean-resume/./src/components/images.js","webpack://gatsby-starter-clean-resume/./src/components/link-cards.js","webpack://gatsby-starter-clean-resume/./src/pages/research.js"],"sourcesContent":["import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\n//https://stackoverflow.com/questions/55122752/reusable-gatsby-image-component-with-dynamic-image-sources\r\n \r\nconst Image = props => (\r\n  <StaticQuery\r\n    query ={graphql`\r\n    query {\r\n      images: allFile(filter: { sourceInstanceName: { eq: \"data\" } }) {\r\n        edges {\r\n          node {\r\n            relativePath\r\n            name\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED)\r\n            }\r\n          }   \r\n        }\r\n      }\r\n    }\r\n    `}\r\n  render={data => {\r\n   const image = data.images.edges.find(n => {\r\n      let regex = /[^/]*$/g\r\n      return n.node.relativePath.includes(regex.exec(props.filename));\r\n    });\r\n    if (!image) {\r\n      return null;\r\n    }\r\n    \r\n    return (\r\n      <img src={image.node.childImageSharp.gatsbyImageData.images.fallback.src} lazy alt class=\"gatimg\" />\r\n      \r\n      );\r\n  }}\r\n  />\r\n);\r\nexport default Image;\r\n\r\n  ","import React from \"react\"\r\nimport Image from '../components/images.js';\r\n\r\nvar Color = require('color');\r\n\r\nvar black = Color.rgb([255, 255, 255])\r\n\r\nconst LinkCard = props => {\r\n  const absDisplay = !(props.abstract) ? \"none\" : \"inline\";\r\n  const abstractShown = !(props.showAbstract) ? \"none\" : \"inline\";\r\n  const pubwebDisplay = !(props.pubweb) ? \"none\" : \"inline\";\r\n  const fulltextDisplay = !(props.fulltextpdf) ? \"none\" : \"inline\";\r\n  const fulltextaccDisplay = !(props.fulltextacc) ? \"none\" : \"inline\";\r\n  const slidesDisplay = !(props.slides) ? \"none\" : \"inline\";\r\n  const presentedatDisplay = !(props.presentedat) ? \"none\" : \"inline\";\r\n  const mentionedinDisplay = !(props.mentionedin) ? \"none\" : \"inline\";\r\n  const presentedtemp = [].concat(props.presentedat);\r\n  const presentedlist = presentedtemp.map((item) =>\r\n  <li>{item}</li>);\r\n\r\n    return (\r\n<div className=\"card\" pubtype={props.pubtype} tabIndex=\"0\" aria-label={props.shorttitle}>\r\n  <div className=\"first\">\r\n    <div className=\"cardImage\" style={{zIndex:\"0\", opacity:\"1\"}}>\r\n   <Image filename={props.image} alt={props.alt} style={{width:\"100%\", opacity: \"1\"}}></Image>\r\n   </div>\r\n \r\n</div>\r\n\r\n  <div className=\"second\" style={{lineHeight:\"1.1\"}} aria-label={props.shorttitle}>\r\n  <div>\r\n   <br></br>\r\n  <h2 className=\"cardTitle\">{props.shorttitle} ({props.date})</h2>\r\n  <br></br>\r\n  <div className=\"button-outer cardInset\" style={{marginTop:\"0px\", fontSize:\"smaller\"}}>\r\n  <h3>{props.authors}, </h3>\r\n  <h3 style={{fontStyle:\"italic\"}}>{props.place}</h3>  \r\n  <br></br>\r\n    <a onClick={props.onToggleAbstract} style={{display:absDisplay}}>[Abstract]</a> &nbsp; \r\n    <span style={{display:pubwebDisplay}}><a href={props.pubweb} >[{props.linkname}]</a></span> &nbsp; \r\n    <a href={props.fulltextpdf} style={{display:fulltextDisplay}}>[Full text]</a>  &nbsp;\r\n    <a href={props.slides} style={{display:slidesDisplay}} target>[Slides]</a> \r\n    <span  style={{display:fulltextaccDisplay}}>(<a href={props.fulltextacc} >Accessible version</a>)</span>\r\n    </div>\r\n  </div>\r\n  <div className=\"cardInset\" style={{ fontSize: \"smaller\", marginTop: \"10px\" }}>\r\n    <div className=\"abstract cardInset\" ><p style={{fontSize:\"1.05em\", marginBottom:\"0px\", marginTop:\"10px\", display:abstractShown}}>{props.abstract}</p></div>\r\n  </div>\r\n    <div className=\"presentedat cardInset\" ><p style={{fontSize:\"smaller\", marginBottom:\"0px\", marginTop:\"10px\", display:presentedatDisplay}}>\r\n      <br></br>\r\n      <br></br>\r\n      Presented at:\r\n      <ul>{presentedlist}</ul>\r\n\r\n  \r\n  </p></div>\r\n\r\n    <br></br>\r\n    <div className=\"presentedat cardInset\" style={{display:mentionedinDisplay, fontSize:\"smaller\"}}>Mentioned by:<p style={{fontSize:\"small\", marginBottom:\"0px\", marginLeft:\"20px\"}}  dangerouslySetInnerHTML={{ __html: props.mentionedin }}/>\r\n\r\n</div>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    )\r\n  }\r\n  \r\n  export default LinkCard\r\n  \r\n\r\n  ","import React, {useState} from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport LinkCard from \"../components/link-cards\"\r\n\r\nexport default props => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    allPublicationsJson(sort:  {fields: [date, month], order:[DESC,DESC]}) {\r\n      edges {\r\n        node {\r\n          shorttitle\r\n          authors\r\n          place\r\n          image\r\n          abstract\r\n          fulltextpdf\r\n          pubtype\r\n          pubweb\r\n          date\r\n          alt\r\n          slides\r\n          presentedat\r\n          mentionedin\r\n          linkname\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  `)\r\n\r\n  //Control abstract display individually\r\n  const [openAbstractId, setOpenAbstractId] = useState(null);\r\n  // And as a group \r\n  const [showAbstract, setShowAbstract] = useState(false);\r\n  const handleCheckboxChange = (event) => {\r\n    setShowAbstract(event.target.checked);\r\n  };\r\n\r\n  const cardGridPub = data.allPublicationsJson.edges.filter( (item) => item.node.pubtype.includes(\"journal\")).map((item, index) => (\r\n        <LinkCard \r\n          date={item.node.date}\r\n          place={item.node.place}\r\n          shorttitle={item.node.shorttitle}\r\n          authors={item.node.authors}\r\n          abstract={item.node.abstract}\r\n          fulltextpdf={item.node.fulltextpdf}\r\n          //fulltextacc={item.fulltextacc}\r\n          pubtype={item.node.pubtype}\r\n          pubweb={item.node.pubweb}\r\n          linkname={item.node.linkname}\r\n          image={item.node.image}\r\n          alt={item.node.alt}\r\n          slides={item.node.slides}\r\n          presentedat={item.node.presentedat}\r\n          mentionedin={item.node.mentionedin}\r\n          showAbstract={showAbstract || openAbstractId === item.node.shorttitle}\r\n          onToggleAbstract={() =>\r\n            setOpenAbstractId((prev) => (prev === item.node.shorttitle ? null : item.node.shorttitle))\r\n          }       \r\n          />\r\n  ))\r\n\r\n  const cardGridWP = data.allPublicationsJson.edges.filter( (item) => item.node.pubtype.includes(\"wp\")).map((item, index) => (\r\n    <LinkCard \r\n      date={item.node.date}\r\n      place={item.node.place}\r\n      shorttitle={item.node.shorttitle}\r\n      authors={item.node.authors}\r\n      abstract={item.node.abstract}\r\n      fulltextpdf={item.node.fulltextpdf}\r\n      //fulltextacc={item.fulltextacc}\r\n      pubtype={item.node.pubtype}\r\n      pubweb={item.node.pubweb}\r\n      linkname={item.node.linkname}\r\n      image={item.node.image}\r\n      alt={item.node.alt}\r\n      slides={item.node.slides}\r\n      presentedat={item.node.presentedat}   \r\n      mentionedin={item.node.mentionedin}\r\n      showAbstract={showAbstract || openAbstractId === item.node.shorttitle}\r\n      onToggleAbstract={() =>\r\n        setOpenAbstractId((prev) => (prev === item.node.shorttitle ? null : item.node.shorttitle))\r\n      }     \r\n      />\r\n))\r\n\r\n\r\nconst cardGridPolicy = data.allPublicationsJson.edges.filter( (item) => item.node.pubtype.includes(\"institutional\")).map((item, index) => (\r\n  <LinkCard \r\n    date={item.node.date}\r\n    place={item.node.place}\r\n    shorttitle={item.node.shorttitle}\r\n    authors={item.node.authors}\r\n    abstract={item.node.abstract}\r\n    fulltextpdf={item.node.fulltextpdf}\r\n    //fulltextacc={item.fulltextacc}\r\n    pubtype={item.node.pubtype}\r\n    pubweb={item.node.pubweb}\r\n    linkname={item.node.linkname}\r\n    image={item.node.image}\r\n    alt={item.node.alt}\r\n    slides={item.node.slides}\r\n    presentedat={item.node.presentedat} \r\n    //mentionedin={item.node.mentionedin}\r\n    showAbstract={showAbstract || openAbstractId === item.node.shorttitle}\r\n    onToggleAbstract={() =>\r\n      setOpenAbstractId((prev) => (prev === item.node.shorttitle ? null : item.node.shorttitle))\r\n    }       \r\n    />\r\n))\r\n\r\n\r\nconst cardGridBlog = data.allPublicationsJson.edges.filter( (item) => item.node.pubtype.includes(\"blog\") & item.node.pubtype.includes(\"econ\")).map((item, index) => (\r\n  <LinkCard \r\n    date={item.node.date}\r\n    place={item.node.place}\r\n    shorttitle={item.node.shorttitle}\r\n    authors={item.node.authors}\r\n    abstract={item.node.abstract}\r\n    fulltextpdf={item.node.fulltextpdf}\r\n    //fulltextacc={item.fulltextacc}\r\n    pubtype={item.node.pubtype}\r\n    pubweb={item.node.pubweb}\r\n    linkname={item.node.linkname}\r\n    image={item.node.image}\r\n    alt={item.node.alt}\r\n    slides={item.node.slides}\r\n    presentedat={item.node.presentedat}  \r\n    mentionedin={item.node.mentionedin} \r\n    showAbstract={showAbstract || openAbstractId === item.node.shorttitle}\r\n    onToggleAbstract={() =>\r\n      setOpenAbstractId((prev) => (prev === item.node.shorttitle ? null : item.node.shorttitle))\r\n    }     \r\n    />\r\n))\r\n\r\nconst cardGridHistory = data.allPublicationsJson.edges.filter( (item) => item.node.pubtype.includes(\"history\")).map((item, index) => (\r\n  <LinkCard \r\n    date={item.node.date}\r\n    place={item.node.place}\r\n    shorttitle={item.node.shorttitle}\r\n    authors={item.node.authors}\r\n    abstract={item.node.abstract}\r\n    fulltextpdf={item.node.fulltextpdf}\r\n    //fulltextacc={item.fulltextacc}\r\n    pubtype={item.node.pubtype}\r\n    pubweb={item.node.pubweb}\r\n    linkname={item.node.linkname}\r\n    image={item.node.image}\r\n    alt={item.node.alt}\r\n    slides={item.node.slides}\r\n    presentedat={item.node.presentedat}   \r\n   // mentionedin={item.node.mentionedin}\r\n    showAbstract={showAbstract || openAbstractId === item.node.shorttitle}\r\n    onToggleAbstract={() =>\r\n      setOpenAbstractId((prev) => (prev === item.node.shorttitle ? null : item.node.shorttitle))\r\n    }     \r\n    />\r\n))\r\n\r\n\r\n  return (\r\n    <Layout\r\n      pageTitle=\"Research\"\r\n      pageDescription=\"Learn more about my research\"\r\n    >\r\n\r\n{/*\r\n<input type=\"radio\" id=\"All\" name=\"categories\" value=\"All\" aria-label=\"All\" checked=\"checked\" />\r\n<input type=\"radio\" id=\"journal\" name=\"categories\" value=\"journal\" aria-label=\"Journal articles\"></input>\r\n<input type=\"radio\" id=\"institutional\" name=\"categories\" value=\"institutional\"/>\r\n<input type=\"radio\" id=\"wp\" name=\"categories\" value=\"wp\"></input>\r\n<input type=\"radio\" id=\"blog\" name=\"categories\" value=\"blog\"></input>\r\n<input type=\"radio\" id=\"conference\" name=\"categories\" value=\"conference\"></input>\r\n<input type=\"radio\" id=\"econ\" name=\"categories\" value=\"econ\"></input>\r\n<input type=\"radio\" id=\"non\" name=\"categories\" value=\"non\"></input>\r\n<input type=\"radio\" id=\"history\" name=\"categories\" value=\"history\"></input>\r\n  */}\r\n<input type=\"checkbox\" id=\"abstracton\" value=\"abstracton\" checked={showAbstract} onChange={handleCheckboxChange}></input>\r\n<input type=\"checkbox\" id=\"imageson\" value=\"imageson\"></input>\r\n\r\n{/*\r\n<div class=\"filters\" role=\"list\">\r\n  <li aria-label=\"All\">\r\n    <label for=\"All\" aria-label=\"All\" >All</label>\r\n  </li>\r\n  <li aria-label=\"journal articles\">\r\n    <label for=\"journal\" area-label=\"journal articles\">Journal Articles</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"institutional\">Policy & Institutional Reports</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"wp\">Working Papers</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"blog\">Commentary</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"conference\">Conferences & Presentations</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"econ\">Economics</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"non\">Econ-Related Fields</label>\r\n  </li>\r\n  <li>\r\n    <label for=\"history\">History</label>\r\n  </li> \r\n</div>\r\n*/}\r\n<div className=\"researchSwitch\" role=\"list\" style={{fontSize:\"smaller\"}}>\r\n<li>\r\n  Show images   \r\n    <label class=\"switch\" for=\"imageson\">\r\n    <span class=\"slider round\"></span>\r\n  </label>\r\n  </li>  \r\n\r\n  <li>\r\n  Show all abstracts\r\n    <label class=\"switch\" for=\"abstracton\">\r\n    <span class=\"slider round\"></span>\r\n  </label>\r\n\r\n  </li>\r\n</div>\r\n\r\n<div style={{marginTop:\"20px\"}}>\r\n  <h3 style={{lineHeight:\"1.1\", fontSize:\"larger\", marginBottom: \"0px\"}}>Working papers & works in progress</h3>\r\n    <hr style={{margin:\"1rem\"}}></hr>\r\n    <div className=\"card-grid\">\r\n      {cardGridWP}\r\n    </div>\r\n</div>\r\n\r\n<div style={{marginTop:\"20px\"}}>\r\n  <h3 style={{lineHeight:\"1.1\", fontSize:\"larger\", marginBottom: \"0px\"}}>Publications</h3>\r\n    <hr style={{margin:\"1rem\"}}></hr>\r\n    <div className=\"card-grid\">\r\n      {cardGridPub}\r\n    </div>\r\n</div>\r\n\r\n<div style={{marginTop:\"20px\"}}>\r\n  <h3 style={{lineHeight:\"1.1\", fontSize:\"larger\", marginBottom: \"0px\"}}>Contributions to policy & institutional reports</h3>\r\n    <hr style={{margin:\"1rem\"}}></hr>\r\n    <div className=\"card-grid\">\r\n      {cardGridPolicy}\r\n    </div>\r\n</div>\r\n\r\n<div style={{marginTop:\"20px\"}}>\r\n  <h3 style={{lineHeight:\"1.1\", fontSize:\"larger\", marginBottom: \"0px\"}}>Blog posts & commentary</h3>\r\n    <hr style={{margin:\"1rem\"}}></hr>\r\n    <div className=\"card-grid\">\r\n      {cardGridBlog}\r\n    </div>\r\n</div>\r\n\r\n<div style={{marginTop:\"20px\"}}>\r\n  <h3 style={{lineHeight:\"1.1\", fontSize:\"larger\", marginBottom: \"0px\"}}>History work</h3>\r\n    <hr style={{margin:\"1rem\"}}></hr>\r\n    <div className=\"card-grid\">\r\n      {cardGridHistory}\r\n    </div>\r\n</div>\r\n\r\n\r\n    \r\n    </Layout>\r\n  )\r\n}\r\n"],"names":["props","React","StaticQuery","query","render","data","image","images","edges","find","n","node","relativePath","includes","exec","filename","src","childImageSharp","gatsbyImageData","fallback","lazy","alt","class","require","rgb","absDisplay","abstract","abstractShown","showAbstract","pubwebDisplay","pubweb","fulltextDisplay","fulltextpdf","fulltextaccDisplay","fulltextacc","slidesDisplay","slides","presentedatDisplay","presentedat","mentionedinDisplay","mentionedin","presentedlist","concat","map","item","className","pubtype","tabIndex","shorttitle","style","zIndex","opacity","Image","width","lineHeight","date","marginTop","fontSize","authors","fontStyle","place","onClick","onToggleAbstract","display","href","linkname","target","marginBottom","marginLeft","dangerouslySetInnerHTML","__html","useStaticQuery","openAbstractId","setOpenAbstractId","useState","setShowAbstract","cardGridPub","allPublicationsJson","filter","index","LinkCard","prev","cardGridWP","cardGridPolicy","cardGridBlog","cardGridHistory","Layout","pageTitle","pageDescription","type","id","value","checked","onChange","event","role","for","margin"],"sourceRoot":""}